Index: src/org/jruby/ast/visitor/DefaultIteratorVisitor.java
===================================================================
--- src/org/jruby/ast/visitor/DefaultIteratorVisitor.java	(revision 1146)
+++ src/org/jruby/ast/visitor/DefaultIteratorVisitor.java	(working copy)
@@ -195,14 +195,14 @@
         return null;
     }
     
-    /** @fixme iteration not correctly defined */
     public Instruction visitAttrAssignNode(AttrAssignNode iVisited) {
         iVisited.accept(_Payload);
-        // FIXME
-        /*
-         * for (Node node = iVisited.getArgsNode(); node != null; node =
-         * node.getNextNode()) { node.getHeadNode().accept(this); }
-         */
+        if(iVisited.getArgsNode() != null) {
+        	iVisited.getArgsNode().accept(this);
+        }
+        if(iVisited.getReceiverNode() != null) {
+        	iVisited.getReceiverNode().accept(this);
+        }
         return null;
     }
 
@@ -272,16 +272,14 @@
 		return null;
 	}
 
-	/**
-	 * @fixme iteration not correctly defined
-	 */
 	public Instruction visitCallNode(CallNode iVisited) {
 		iVisited.getReceiverNode().accept(this);
-		//  FIXME
-		/*
-		 * for (Node node = iVisited.getArgsNode(); node != null; node =
-		 * node.getNextNode()) { node.getHeadNode().accept(this); }
-		 */
+		if(iVisited.getArgsNode() != null) {
+			iVisited.getArgsNode().accept(this);
+		}
+		if(iVisited.getIterNode() != null) {
+			iVisited.getIterNode().accept(this);
+		}
 		iVisited.accept(_Payload);
 		return null;
 	}
@@ -387,14 +385,14 @@
 		return null;
 	}
 
-	/** @fixme iteration not correctly defined */
 	public Instruction visitFCallNode(FCallNode iVisited) {
 		iVisited.accept(_Payload);
-		// FIXME
-		/*
-		 * for (Node node = iVisited.getArgsNode(); node != null; node =
-		 * node.getNextNode()) { node.getHeadNode().accept(this); }
-		 */
+		if(iVisited.getArgsNode() != null) {
+			iVisited.getArgsNode().accept(this);
+		}
+		if(iVisited.getIterNode() != null) {
+			iVisited.getIterNode().accept(this);
+		}
 		return null;
 	}
 
